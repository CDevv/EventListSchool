{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\\\u0423\\u043F\\u0440\\u0430\\u0436\\u043D\\u0435\\u043D\\u0438\\u044F 9 \\u043A\\u043B\\u0430\\u0441\\\\\\u041C\\u043E\\u0431\\u0438\\u043B\\u043D\\u0438 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\\\EventsApp\\\\EventList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport EventCard from \"./EventCard\";\n\nvar EventList = function (_Component) {\n  _inherits(EventList, _Component);\n\n  var _super = _createSuper(EventList);\n\n  function EventList() {\n    var _this;\n\n    _classCallCheck(this, EventList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(EventList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var events = require(\"./data.json\").events;\n\n      this.setState({\n        events: events\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.events,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(EventCard, {\n            eventItem: item,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 47\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('EventForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return EventList;\n}(Component);\n\n;\nexport default EventList;\nvar styles = StyleSheet.create({\n  eventList: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"sources":["D:/Упражнения 9 клас/Мобилни приложения/EventsApp/EventList.js"],"names":["React","Component","EventCard","EventList","state","events","require","setState","item","props","navigation","navigate","styles","StyleSheet","create","eventList","flex","flexDirection","flexWrap"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,SAAP;;IAEMC,S;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;;;;;WAIR,6BAAoB;AAChB,UAAMA,MAAM,GAAGC,OAAO,eAAP,CAAuBD,MAAtC;;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAANA;AAAF,OAAd;AACH;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,MADrB;AAEI,QAAA,UAAU,EAAE;AAAA,cAAGG,IAAH,QAAGA,IAAH;AAAA,iBAAc,oBAAC,SAAD;AAAW,YAAA,SAAS,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AAAA,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,WAA/B,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAYH;;;;EAvBmBV,S;;AAwBvB;AAED,eAAeE,SAAf;AAEA,IAAMS,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AADkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, FlatList, View, Button, StyleSheet } from 'react-native';\nimport EventCard from './EventCard';\n\nclass EventList extends Component {\n    state = {\n        events: []\n    };\n\n    componentDidMount() {\n        const events = require('./data.json').events;\n        this.setState({ events });\n    }\n\n    render() {\n        return (\n            <View>\n                <FlatList\n                    data={this.state.events}\n                    renderItem={({ item }) => <EventCard eventItem={item} />}\n                    //style={styles.eventList}\n                ></FlatList>\n                <Button\n                    onPress={() => this.props.navigation.navigate('EventForm')}\n                ></Button>\n            </View>\n        );\n    };\n};\n\nexport default EventList;\n\nconst styles = StyleSheet.create({\n    eventList: {\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n    }\n});"]},"metadata":{},"sourceType":"module"}